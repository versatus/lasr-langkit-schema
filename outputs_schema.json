{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Outputs",
  "description": "The structure returned by a program/call transaction.",
  "type": "object",
  "required": [
    "inputs",
    "instructions"
  ],
  "properties": {
    "inputs": {
      "$ref": "#/definitions/Inputs"
    },
    "instructions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Instruction"
      }
    }
  },
  "definitions": {
    "Account": {
      "description": "Represents an LASR account.\n\nThis structure contains details of an LASR account, including its address, associated programs, nonce, signatures, hashes, and certificates. It implements traits for serialization, hashing, and comparison.",
      "type": "object",
      "required": [
        "account_type",
        "nonce",
        "owner_address",
        "program_account_data",
        "program_account_linked_programs",
        "program_account_metadata",
        "programs"
      ],
      "properties": {
        "account_type": {
          "$ref": "#/definitions/AccountType"
        },
        "nonce": {
          "$ref": "#/definitions/U256"
        },
        "owner_address": {
          "$ref": "#/definitions/Address"
        },
        "program_account_data": {
          "$ref": "#/definitions/ArbitraryData"
        },
        "program_account_linked_programs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressOrNamespace"
          },
          "uniqueItems": true
        },
        "program_account_metadata": {
          "$ref": "#/definitions/Metadata"
        },
        "program_namespace": {
          "anyOf": [
            {
              "$ref": "#/definitions/AddressOrNamespace"
            },
            {
              "type": "null"
            }
          ]
        },
        "programs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Token"
          }
        }
      }
    },
    "AccountType": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "User"
          ]
        },
        {
          "type": "object",
          "required": [
            "Program"
          ],
          "properties": {
            "Program": {
              "$ref": "#/definitions/Address"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Address": {
      "description": "Represents a 20-byte Ethereum Compatible address.\n\nThis structure is used to store Ethereum Compatible addresses, which are derived from the public key. It implements traits like Clone, Copy, Debug, Serialize, Deserialize, etc., for ease of use across various contexts.",
      "type": "array",
      "items": {
        "type": "integer",
        "format": "uint8",
        "minimum": 0.0,
        "maximum": 255.0
      },
      "maxItems": 20,
      "minItems": 20
    },
    "AddressOrNamespace": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "This"
          ]
        },
        {
          "type": "object",
          "required": [
            "Address"
          ],
          "properties": {
            "Address": {
              "$ref": "#/definitions/Address"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Namespace"
          ],
          "properties": {
            "Namespace": {
              "$ref": "#/definitions/Namespace"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "AllowanceValue": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "Insert"
          ],
          "properties": {
            "Insert": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/Address"
                },
                {
                  "$ref": "#/definitions/U256"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Extend"
          ],
          "properties": {
            "Extend": {
              "type": "array",
              "items": {
                "type": "array",
                "items": [
                  {
                    "$ref": "#/definitions/Address"
                  },
                  {
                    "$ref": "#/definitions/U256"
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Remove"
          ],
          "properties": {
            "Remove": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/Address"
                },
                {
                  "$ref": "#/definitions/U256"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Revoke"
          ],
          "properties": {
            "Revoke": {
              "$ref": "#/definitions/Address"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "ApprovalsValue": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "Insert"
          ],
          "properties": {
            "Insert": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/Address"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/U256"
                  }
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Extend"
          ],
          "properties": {
            "Extend": {
              "type": "array",
              "items": {
                "type": "array",
                "items": [
                  {
                    "$ref": "#/definitions/Address"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/U256"
                    }
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Remove"
          ],
          "properties": {
            "Remove": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/Address"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/U256"
                  }
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Revoke"
          ],
          "properties": {
            "Revoke": {
              "$ref": "#/definitions/Address"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "ArbitraryData": {
      "description": "Represents a generic data container.\n\nThis structure is used to store arbitrary data as a vector of bytes (`Vec<u8>`). It provides a default, cloneable, serializable, and debuggable interface. It is typically used for storing data that doesn't have a fixed format or structure.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "BalanceValue": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "Credit"
          ],
          "properties": {
            "Credit": {
              "$ref": "#/definitions/U256"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Debit"
          ],
          "properties": {
            "Debit": {
              "$ref": "#/definitions/U256"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "BurnInstruction": {
      "type": "object",
      "required": [
        "caller",
        "from",
        "program_id",
        "token",
        "token_ids"
      ],
      "properties": {
        "amount": {
          "anyOf": [
            {
              "$ref": "#/definitions/U256"
            },
            {
              "type": "null"
            }
          ]
        },
        "caller": {
          "$ref": "#/definitions/Address"
        },
        "from": {
          "$ref": "#/definitions/AddressOrNamespace"
        },
        "program_id": {
          "$ref": "#/definitions/AddressOrNamespace"
        },
        "token": {
          "$ref": "#/definitions/Address"
        },
        "token_ids": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/U256"
          }
        }
      }
    },
    "ContractLogType": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "Info"
          ],
          "properties": {
            "Info": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Error"
          ],
          "properties": {
            "Error": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Warn"
          ],
          "properties": {
            "Warn": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Debug"
          ],
          "properties": {
            "Debug": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "CreateInstruction": {
      "type": "object",
      "required": [
        "distribution",
        "initialized_supply",
        "program_id",
        "program_namespace",
        "program_owner",
        "total_supply"
      ],
      "properties": {
        "distribution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenDistribution"
          }
        },
        "initialized_supply": {
          "$ref": "#/definitions/U256"
        },
        "program_id": {
          "$ref": "#/definitions/AddressOrNamespace"
        },
        "program_namespace": {
          "$ref": "#/definitions/AddressOrNamespace"
        },
        "program_owner": {
          "$ref": "#/definitions/Address"
        },
        "total_supply": {
          "$ref": "#/definitions/U256"
        }
      }
    },
    "DataValue": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "Insert"
          ],
          "properties": {
            "Insert": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Extend"
          ],
          "properties": {
            "Extend": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Remove"
          ],
          "properties": {
            "Remove": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Inputs": {
      "description": "This file contains types the protocol uses to prepare data, structure it and call out to a particular compute payload. The inputs type for a contract call",
      "type": "object",
      "required": [
        "inputs",
        "op",
        "transaction",
        "version"
      ],
      "properties": {
        "account_info": {
          "anyOf": [
            {
              "$ref": "#/definitions/Account"
            },
            {
              "type": "null"
            }
          ]
        },
        "inputs": {
          "type": "string"
        },
        "op": {
          "type": "string"
        },
        "transaction": {
          "$ref": "#/definitions/Transaction"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Instruction": {
      "description": "An enum representing the instructions that a program can return to the protocol. Also represent types that tell the protocol what the pre-requisites of a given function call are. All enabled languages have equivalent types",
      "oneOf": [
        {
          "description": "The return type created by the construction method of a contract",
          "type": "object",
          "required": [
            "Create"
          ],
          "properties": {
            "Create": {
              "$ref": "#/definitions/CreateInstruction"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Tells the protocol to update a field, should almost never be used to add balance to a token or add a token id (for Non-fungible or Data tokens) should prrimarily be used to update approvals, allowances, metadata, arbitrary data etc. Transfer or burn should be used to add/subtract balance. Lock/Unlock should be used to lock value",
          "type": "object",
          "required": [
            "Update"
          ],
          "properties": {
            "Update": {
              "$ref": "#/definitions/UpdateInstruction"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Tells the protocol to subtract balance of one address/token pair and add to different address",
          "type": "object",
          "required": [
            "Transfer"
          ],
          "properties": {
            "Transfer": {
              "$ref": "#/definitions/TransferInstruction"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Tells the protocol to burn a token (amount or id for NFT/Data tokens)",
          "type": "object",
          "required": [
            "Burn"
          ],
          "properties": {
            "Burn": {
              "$ref": "#/definitions/BurnInstruction"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Tells the protocol to log something",
          "type": "object",
          "required": [
            "Log"
          ],
          "properties": {
            "Log": {
              "$ref": "#/definitions/LogInstruction"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "LinkedProgramsValue": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "Insert"
          ],
          "properties": {
            "Insert": {
              "$ref": "#/definitions/Address"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Extend"
          ],
          "properties": {
            "Extend": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address"
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Remove"
          ],
          "properties": {
            "Remove": {
              "$ref": "#/definitions/Address"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "LogInstruction": {
      "$ref": "#/definitions/ContractLogType"
    },
    "Metadata": {
      "description": "Represents metadata as a byte vector.\n\nThis structure is designed to encapsulate metadata, stored as a vector of bytes. It supports cloning, serialization, and debugging. The metadata can be of any form that fits into a byte array, making it a flexible container.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "MetadataValue": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "Insert"
          ],
          "properties": {
            "Insert": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Extend"
          ],
          "properties": {
            "Extend": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Remove"
          ],
          "properties": {
            "Remove": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Namespace": {
      "type": "string"
    },
    "ProgramField": {
      "type": "string",
      "enum": [
        "LinkedPrograms",
        "Metadata",
        "Data"
      ]
    },
    "ProgramFieldValue": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "LinkedPrograms"
          ],
          "properties": {
            "LinkedPrograms": {
              "$ref": "#/definitions/LinkedProgramsValue"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Metadata"
          ],
          "properties": {
            "Metadata": {
              "$ref": "#/definitions/MetadataValue"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Data"
          ],
          "properties": {
            "Data": {
              "$ref": "#/definitions/DataValue"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "ProgramUpdate": {
      "type": "object",
      "required": [
        "account",
        "updates"
      ],
      "properties": {
        "account": {
          "$ref": "#/definitions/AddressOrNamespace"
        },
        "updates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProgramUpdateField"
          }
        }
      }
    },
    "ProgramUpdateField": {
      "type": "object",
      "required": [
        "field",
        "value"
      ],
      "properties": {
        "field": {
          "$ref": "#/definitions/ProgramField"
        },
        "value": {
          "$ref": "#/definitions/ProgramFieldValue"
        }
      }
    },
    "Status": {
      "type": "string",
      "enum": [
        "Locked",
        "Free"
      ]
    },
    "StatusValue": {
      "type": "string",
      "enum": [
        "Reverse",
        "Lock",
        "Unlock"
      ]
    },
    "Token": {
      "type": "object",
      "required": [
        "allowance",
        "approvals",
        "balance",
        "data",
        "metadata",
        "owner_id",
        "program_id",
        "status",
        "token_ids"
      ],
      "properties": {
        "allowance": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/U256"
          }
        },
        "approvals": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/U256"
            }
          }
        },
        "balance": {
          "$ref": "#/definitions/U256"
        },
        "data": {
          "$ref": "#/definitions/ArbitraryData"
        },
        "metadata": {
          "$ref": "#/definitions/Metadata"
        },
        "owner_id": {
          "$ref": "#/definitions/Address"
        },
        "program_id": {
          "$ref": "#/definitions/Address"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "token_ids": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/U256"
          }
        }
      }
    },
    "TokenDistribution": {
      "type": "object",
      "required": [
        "program_id",
        "to",
        "token_ids",
        "update_fields"
      ],
      "properties": {
        "amount": {
          "anyOf": [
            {
              "$ref": "#/definitions/U256"
            },
            {
              "type": "null"
            }
          ]
        },
        "program_id": {
          "$ref": "#/definitions/AddressOrNamespace"
        },
        "to": {
          "$ref": "#/definitions/AddressOrNamespace"
        },
        "token_ids": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/U256"
          }
        },
        "update_fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenUpdateField"
          }
        }
      }
    },
    "TokenField": {
      "type": "string",
      "enum": [
        "ProgramId",
        "OwnerId",
        "Balance",
        "Metadata",
        "TokenIds",
        "Allowance",
        "Approvals",
        "Data",
        "Status"
      ]
    },
    "TokenFieldValue": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "Balance"
          ],
          "properties": {
            "Balance": {
              "$ref": "#/definitions/BalanceValue"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Metadata"
          ],
          "properties": {
            "Metadata": {
              "$ref": "#/definitions/MetadataValue"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "TokenIds"
          ],
          "properties": {
            "TokenIds": {
              "$ref": "#/definitions/TokenIdValue"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Allowance"
          ],
          "properties": {
            "Allowance": {
              "$ref": "#/definitions/AllowanceValue"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Approvals"
          ],
          "properties": {
            "Approvals": {
              "$ref": "#/definitions/ApprovalsValue"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Data"
          ],
          "properties": {
            "Data": {
              "$ref": "#/definitions/DataValue"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Status"
          ],
          "properties": {
            "Status": {
              "$ref": "#/definitions/StatusValue"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "TokenIdValue": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "Pop"
          ]
        },
        {
          "type": "object",
          "required": [
            "Push"
          ],
          "properties": {
            "Push": {
              "$ref": "#/definitions/U256"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Extend"
          ],
          "properties": {
            "Extend": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/U256"
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Insert"
          ],
          "properties": {
            "Insert": {
              "type": "array",
              "items": [
                {
                  "type": "integer",
                  "format": "uint",
                  "minimum": 0.0
                },
                {
                  "$ref": "#/definitions/U256"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Remove"
          ],
          "properties": {
            "Remove": {
              "$ref": "#/definitions/U256"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "TokenOrProgramUpdate": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "TokenUpdate"
          ],
          "properties": {
            "TokenUpdate": {
              "$ref": "#/definitions/TokenUpdate"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "ProgramUpdate"
          ],
          "properties": {
            "ProgramUpdate": {
              "$ref": "#/definitions/ProgramUpdate"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "TokenUpdate": {
      "type": "object",
      "required": [
        "account",
        "token",
        "updates"
      ],
      "properties": {
        "account": {
          "$ref": "#/definitions/AddressOrNamespace"
        },
        "token": {
          "$ref": "#/definitions/AddressOrNamespace"
        },
        "updates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenUpdateField"
          }
        }
      }
    },
    "TokenUpdateField": {
      "type": "object",
      "required": [
        "field",
        "value"
      ],
      "properties": {
        "field": {
          "$ref": "#/definitions/TokenField"
        },
        "value": {
          "$ref": "#/definitions/TokenFieldValue"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "required": [
        "from",
        "inputs",
        "nonce",
        "op",
        "program_id",
        "r",
        "s",
        "to",
        "transaction_type",
        "v",
        "value"
      ],
      "properties": {
        "from": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0,
            "maximum": 255.0
          },
          "maxItems": 20,
          "minItems": 20
        },
        "inputs": {
          "type": "string"
        },
        "nonce": {
          "$ref": "#/definitions/U256"
        },
        "op": {
          "type": "string"
        },
        "program_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0,
            "maximum": 255.0
          },
          "maxItems": 20,
          "minItems": 20
        },
        "r": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0,
            "maximum": 255.0
          },
          "maxItems": 32,
          "minItems": 32
        },
        "s": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0,
            "maximum": 255.0
          },
          "maxItems": 32,
          "minItems": 32
        },
        "to": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0,
            "maximum": 255.0
          },
          "maxItems": 20,
          "minItems": 20
        },
        "transaction_type": {
          "$ref": "#/definitions/TransactionType"
        },
        "v": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "$ref": "#/definitions/U256"
        }
      }
    },
    "TransactionType": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "BridgeIn"
          ],
          "properties": {
            "BridgeIn": {
              "$ref": "#/definitions/U256"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Send"
          ],
          "properties": {
            "Send": {
              "$ref": "#/definitions/U256"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Call"
          ],
          "properties": {
            "Call": {
              "$ref": "#/definitions/U256"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "BridgeOut"
          ],
          "properties": {
            "BridgeOut": {
              "$ref": "#/definitions/U256"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "RegisterProgram"
          ],
          "properties": {
            "RegisterProgram": {
              "$ref": "#/definitions/U256"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "TransferInstruction": {
      "type": "object",
      "required": [
        "from",
        "ids",
        "to",
        "token"
      ],
      "properties": {
        "amount": {
          "anyOf": [
            {
              "$ref": "#/definitions/U256"
            },
            {
              "type": "null"
            }
          ]
        },
        "from": {
          "$ref": "#/definitions/AddressOrNamespace"
        },
        "ids": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/U256"
          }
        },
        "to": {
          "$ref": "#/definitions/AddressOrNamespace"
        },
        "token": {
          "$ref": "#/definitions/Address"
        }
      }
    },
    "U256": {
      "type": "array",
      "items": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0,
        "maximum": 18446744073709551615.0
      },
      "maxItems": 4,
      "minItems": 4
    },
    "UpdateInstruction": {
      "type": "object",
      "required": [
        "updates"
      ],
      "properties": {
        "updates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenOrProgramUpdate"
          }
        }
      }
    }
  }
}
